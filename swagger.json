{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.5",
    "title": "GooseTrack",
    "description": "This is a sample documentation for the GooseTrack application based on OpenApi 3.0.1. This documentation provides access to the core functionalities of our service. The API enables you to retrieve and send data, manage resources, and interact with the application. We continuously work on improving it, updating, and expanding its functionality. Please review our documentation to learn how to get started with our API and seamlessly integrate it into your projects."
  },
  "servers": [{ "url": "http://localhost:4000/api" }],
  "tags": [
    { "name": "Auth", "description": "Authorization endpoints" },
    { "name": "Users", "description": "Users endpoints" },
    { "name": "Reviews", "description": "Reviews endpoints" },
    { "name": "Tasks", "description": "Tasks endpoints" }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login an account",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email or password invalid",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Logout success",
            "content": {}
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unathorized",
            "content": {}
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get info about current user",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Operation success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/users/verify/{verificationToken}": {
      "get": {
        "tags": ["Auth"],
        "summary": "Verification user's email",
        "parameters": [
          {
            "name": "verificationToken",
            "in": "path",
            "required": true,
            "description": "Verification token received by the user",
            "schema": {
              "$ref": "#components/schemas/VerifyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Verification successfull",
            "content": {}
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Email not found",
            "content": {}
          }
        }
      }
    },
    "/users/verify": {
      "post": {
        "tags": ["Auth"],
        "summary": "Resend verification user's email",
        "parameters": [],
        "requestBody": {
          "description": "Vefify's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/VerifyResendRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification email sent",
            "content": {}
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/users/edit": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update user's data",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update's object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#components/schemas/UpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update user data success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Nadiia Moe"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "nadiia.moe.12@mail.com",
            "pattern": "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "nadiiamoe_password123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "pattern": "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "nadiia.moe.12@mail.com",
            "pattern": "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "nadiiamoe_password123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "Token"
          }
        }
      },
      "VerifyRequest": {
        "type": "object",
        "required": true,
        "properties": {
          "verificationToken": {
            "type": "string"
          }
        }
      },
      "VerifyResendRequest": {
        "type": "object",
        "required": true,
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "nadiia.moe.12@mail.com",
            "pattern": "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$"
          }
        }
      },
      "UpdateRequest": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "format": "binary",
            "required": true
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "pattern": "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "pattern": "/^+380d{9}$/"
          },
          "skype": {
            "type": "string",
            "description": "User's skype number",
            "maxLength": 16
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday"
          }
        }
      },
      "UpdateResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "example": "http://avatar_link.com"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "pattern": "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "pattern": "/^+380d{9}$/"
          },
          "skype": {
            "type": "string",
            "description": "User's skype number",
            "maxLength": 16
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday"
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "pattern": "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "pattern": "/^+380d{9}$/"
          },
          "skype": {
            "type": "string",
            "description": "User's skype number",
            "maxLength": 16
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday"
          },
          "theme": {
            "type": "string",
            "description": "User's UI theme",
            "enum": ["dark", "light"]
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
